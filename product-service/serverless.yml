service: product-service

custom:
  # Variables not exposed to the application.
  snsSubscriptionEndpoint: danila@loginov.rocks
  snsTopicName: createProductTopic
  sqsQueueName: catalogItemsQueue

provider:
  name: aws
  region: eu-central-1
  runtime: nodejs12.x
  profile: danila_loginov

  environment:
    # Variables exposed to the application.
    DB_HOST: host
    DB_PORT: port
    DB_DATABASE: database
    DB_USER: user
    DB_PASSWORD: password

    SNS_TOPIC_ARN:
      Ref: SnsTopic

  iamRoleStatements:
    - Action:
        - sns:*
      Effect: Allow
      Resource:
        - Ref: SnsTopic
    - Action:
        - sqs:*
      Effect: Allow
      Resource:
        - !ImportValue ${self:custom.sqsQueueName}Arn

plugins:
  - serverless-plugin-webpack

resources:
  Resources:
    SnsSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: ${self:custom.snsSubscriptionEndpoint}
        Protocol: email
        TopicArn:
          Ref: SnsTopic
    SnsTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:custom.snsTopicName}

functions:
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            !ImportValue ${self:custom.sqsQueueName}Arn
  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: products
          method: post
          cors: true
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: products
          method: get
          cors: true
  getProductById:
    handler: handler.getProductById
    events:
      - http:
          path: products/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true
